Part 1 - POS Tagging with Naive Bayes approach implementation

To run the program please use the follow command :

	python3 pos_naivebayes.py NLP6320_POSTaggedTrainingSet-Unix.txt “input sentence”

Please make sure to provide the 2 required arguments - the text file to train the POS and the input sentence to print out
the probability. The input sentence should contain spaces between words and have a period at the end(preceded by a space” 

Some sample test cases are provided below 

	python3 pos_naivebayes.py NLP6320_POSTaggedTrainingSet-Unix.txt "Brainpower power ."

	python3 pos_naivebayes.py NLP6320_POSTaggedTrainingSet-Unix.txt "Brainpower has the power ."

	python3 pos_naivebayes.py NLP6320_POSTaggedTrainingSet-Unix.txt "Brainpower ."

	python3 pos_naivebayes.py NLP6320_POSTaggedTrainingSet-Unix.txt "Hundreds of closed species ."



Part 2 - Viterbi algorithm implementation (recursive approach)

To run the program please use the follow command :

	python3 viterbi.py “observation sequence sentence”

Some sample test cases are provided below 

	python3 viterbi.py "Janet will back the bill"

	python3 viterbi.py "will Janet back the bill"

	python3 viterbi.py "back the bill Janet will"
